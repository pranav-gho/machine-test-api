{
  "swagger": "2.0",
  "info": {
    "title": "My API",
    "description": "Prototype API",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/signup": {
      "post": {
        "summary": "User Signup",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User signup info",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "strongpassword"
                }
              },
              "required": [
                "name",
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Signup successful",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Signup successful"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "hashed"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "User already exists"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "User Login",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User login info",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "john@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "strongpassword"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Login successful"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/locations": {
      "get": {
        "summary": "Get All Locations",
        "description": "",
        "responses": {
          "200": {
            "description": "List of locations",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "1"
                  },
                  "name": {
                    "type": "string",
                    "example": "New York"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/specialities": {
      "get": {
        "summary": "Get All Specialities",
        "description": "",
        "responses": {
          "200": {
            "description": "List of specialities",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "1"
                  },
                  "name": {
                    "type": "string",
                    "example": "Cardiology"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/doctors": {
      "get": {
        "summary": "Search Doctors with filters including name",
        "description": "",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "description": "Filter by location",
            "required": false,
            "type": "string",
            "example": "New York"
          },
          {
            "name": "speciality",
            "in": "query",
            "description": "Filter by speciality",
            "required": false,
            "type": "string",
            "example": "Cardiology"
          },
          {
            "name": "available",
            "in": "query",
            "description": "Filter by availability (true/false)",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort by rating, consultationFee, or experience",
            "required": false,
            "type": "string",
            "enum": [
              "rating",
              "consultationFee",
              "experience"
            ],
            "example": "rating"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Search doctors by name (partial, case-insensitive)",
            "required": false,
            "type": "string",
            "example": "Alice"
          }
        ],
        "responses": {
          "200": {
            "description": "List of doctors matching filters",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "1"
                  },
                  "name": {
                    "type": "string",
                    "example": "Dr. Alice"
                  },
                  "speciality": {
                    "type": "string",
                    "example": "Cardiology"
                  },
                  "rating": {
                    "type": "number",
                    "example": 4.5
                  },
                  "experience": {
                    "type": "number",
                    "example": 10
                  },
                  "consultationFee": {
                    "type": "number",
                    "example": 600
                  },
                  "location": {
                    "type": "string",
                    "example": "New York"
                  },
                  "available": {
                    "type": "boolean",
                    "example": true
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  }
}